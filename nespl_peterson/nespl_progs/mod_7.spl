//int=timer
loadi(4,17);
loadi(5,18);

//int=disk
loadi(6,19);
loadi(7,20);

//int=console
loadi(8,21);
loadi(9,22);

//lib-code
loadi(63,13);
loadi(64,14);

//init-code
loadi(65,7);

//shell-code
loadi(67,9);
loadi(68,10);

//exception
loadi(2,15);
loadi(3,16);

//int=4
loadi(10,23);
loadi(11,24);

//int=5
loadi(12,25);
loadi(13,26);

//int=6
loadi(14,27);
loadi(15,28);

//int=7 
loadi(16,29);
loadi(17,30);

//int=8
loadi(18,31);
loadi(19,32);

//int=9
loadi(20,33);
loadi(21,34);

//int=10
loadi(22,35);
loadi(23,36);

//int=11
loadi(24,37);
loadi(25,38);

//int=12
loadi(26,39);
loadi(27,40);

//int=13
loadi(28,41);
loadi(29,42);

//int=14
loadi(30,43);
loadi(31,44);

//int=15
loadi(32,45);
loadi(33,46);

//int=16
loadi(34,47);
loadi(35,48);

//int=17
loadi(36,49);
loadi(37,50);

//mod=0
loadi(40,53);
loadi(41,54);

//mod=1
loadi(42,55);
loadi(43,56);

//mod=2
loadi(44,57);
loadi(45,58);

//mod=3
loadi(46,59);
loadi(47,60);

//mod=4
loadi(48,61);
loadi(49,62);

//mod=5
loadi(50,63);
loadi(51,64);

//mod=6;
loadi(52,65);
loadi(53,66);

//inodeusertable
loadi(59,3);
loadi(60,4);

//root-file
loadi(62,5);

//disk-free-list
loadi(61,2);

PTBR = PAGE_TABLE_BASE+20;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 66;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0110";

[PROCESS_TABLE+17]=1;
[PROCESS_TABLE+19]=0;
[PROCESS_TABLE+20]=CREATED;
[PROCESS_TABLE+25]=0;
[PROCESS_TABLE+27]=77;
[PROCESS_TABLE+29]=4096;
[PROCESS_TABLE+28]=0;
[PROCESS_TABLE+30]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+31]=10;
[33792]=[33281];

PTBR = PAGE_TABLE_BASE+40;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8] = 67;
[PTBR+9] = "0100";
[PTBR+10] = 68;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 78;
[PTBR+17] = "0110";
[PTBR+18] = 79;
[PTBR+19] = "0110";

[PROCESS_TABLE+33]=2;
[PROCESS_TABLE+34]=1;
[PROCESS_TABLE+36]=TERMINATED;
[PROCESS_TABLE+41]=0;
[PROCESS_TABLE+43]=80;
[PROCESS_TABLE+45]=4096;
[PROCESS_TABLE+44]=0;
[PROCESS_TABLE+46]=PAGE_TABLE_BASE+40;
[PROCESS_TABLE+47]=10;
[39936]=[34305];

alias index R0;
index=0;
while(index<16)	do
	[PROCESS_TABLE+(index*16)]=0;
	if((index>=3)&&(index<14))	then
		[PROCESS_TABLE+(index*16)+4]=TERMINATED;
	endif;
	index=index+1;
endwhile;
index=0;
while(index<160)	do
	[DISK_MAP_TABLE+index]=-1;
	index=index+1;
endwhile;
[DISK_MAP_TABLE + 14] = 7;
[DISK_MAP_TABLE + 24] = 9;
[DISK_MAP_TABLE + 25] = 10;
[DISK_STATUS_TABLE+0] = 0;
[TERMINAL_STATUS_TABLE+0]=0;
index=0;
while(index<128)	do
	if(index<=84)	then
		[MEMORY_FREE_LIST+index]=1;
	else
		[MEMORY_FREE_LIST+index]=0;
	endif;
	index=index+1;
endwhile;
index=3;
while(index<=7)	do
	[SYSTEM_STATUS_TABLE+index]=0;
	index=index+1;
endwhile;
[SYSTEM_STATUS_TABLE+6]=14;
[SYSTEM_STATUS_TABLE+2]=43;
index=1;
while(index<=2)	do
	R1=([PROCESS_TABLE+(index*16)+11]+1)*512;
	R2=16;
	while(R2>0)	do
		[R1-R2]=-1;
		R2=R2-1;
	endwhile;
	index=index+1;
endwhile;	
index=0;
while(index<32)	do
	R1=SEMAPHORE_TABLE+(index*4);
	[R1]=-1;
	[R1+1]=0;
	R1=OPEN_FILE_TABLE+(index*4);
	[R1]=-1;
	[R1+1]=-1;
	index=index+1;
endwhile;
index=0;
while(index<4)	do
	R1=BUFFER_TABLE+(index*4);
	[R1]=-1;
	[R1+1]=0;
	[R1+2]=-1;
	index=index+1;
endwhile;
index=0;
while(index<60)	do
	R1=FILE_STATUS_TABLE+(index*4);
	[R1]=-1;
	[R1+1]=-1;
	index=index+1;
endwhile;
return;
