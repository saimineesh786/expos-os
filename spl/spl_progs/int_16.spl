alias syscallnum R1;
alias userSP R0;

userSP=SP;
syscallnum=[([PTBR+(2*((userSP-5)/512))]*512)+(userSP-5)%512];

alias base_pt R2;
base_pt=PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16);

alias rt_val R3;
rt_val=([PTBR+(2*((userSP-1)/512))]*512)+(userSP-1)%512;

[base_pt+9]=syscallnum;
[base_pt+13] = SP;
SP=([base_pt+11]*512)-1;

if(syscallnum==22)	then
	if(([base_pt+3]!=1)||([base_pt+1]!=2))	then
		[rt_val]=-2;
	else
		alias uname R4;
		uname=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];

		alias pword R5;
		pword=[([PTBR+(2*((userSP-3)/512))]*512)+(userSP-3)%512];
		
		alias uid R6;
		uid=0;
		alias free_uid R7;
		free_uid=-1;
		while(uid<16)	do
			if([USER_TABLE+(uid*2)+0]==uname)	then
				break;
			endif;
			if((free_uid!=-1)&&([USER_TABLE+(uid*2)+0]==-1))	then
				free_uid=uid;
			endif;
			uid=uid+1;
		endwhile;
		if(uid==16)	then
			if(free_uid!=-1)	then
				encrypt pword;
				[USER_TABLE+(free_uid*2)+0]=uname;
				[USER_TABLE+(free_uid*2)+1]=pword;
				[rt_val]=0;
			else
				[rt_val]=-3;
			endif;
		else
			[rt_val]=-1;
		endif;
	endif;
endif;

if(syscallnum==23)	then
	if(([base_pt+3]!=1)||([base_pt+1]!=2))	then
		[rt_val]=-2;
	else
		alias uname R4;
		uname=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];
		if((uname=="root")||(uname=="kernel"))	then
			[rt_val]=-2;
		else
			alias uid R5;
			uid=0;
			while(uid<16)	do
				if([USER_TABLE+(uid*2)+0]==uname)	then
					break;
				endif;
				uid=uid+1;
			endwhile;
			if(uid<16)	then
				alias rf_index R6;
				rf_index=0;
				while(rf_index<60)	do
					if(([ROOT_FILE+(rf_index*8)+0]!=-1)&&([ROOT_FILE+(rf_index*8)+3]==uname))	then
						break;
					endif;
					rf_index=rf_index+1;
				endwhile;
				if(rf_index==60)	then
					[USER_TABLE+(uid*2)+0]=-1;
					[USER_TABLE+(uid*2)+1]=-1;
					[rt_val]=0;
				else
					[rt_val]=-3;
				endif;
			else
				[rt_val]=-1;
			endif;
		endif;
	endif;
endif;

if(syscallnum==24)	then
	if([base_pt+1]!=2)	then
		[rt_val]=-1;
	else
		alias uname R4;
		uname=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];

		alias pword R5;
		pword=[([PTBR+(2*((userSP-3)/512))]*512)+(userSP-3)%512];
		
		alias uid R6;
		uid=0;
		while(uid<16)	do
			if([USER_TABLE+(uid*2)+0]==uname)	then
				break;
			endif;
			uid=uid+1;
		endwhile;
		if(uid<16)	then
			if(uid!=[base_pt+3])	then
				if([base_pt+3]!=1)	then
					[rt_val]=-1;
					[base_pt+9]=0;
					SP=[base_pt+13];
					ireturn;
				endif;
			endif;
			encrypt pword;
			[USER_TABLE+(uid*2)+1]=pword;
			[rt_val]=0;
		else
			[rt_val]=-2;
		endif;
	endif;
endif;

if(syscallnum==26)	then
	alias uname R4;
	uname=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];
	alias uid R5;
	uid=0;
	while(uid<16)	do
		if([USER_TABLE+(uid*2)+0]==uname)	then
			break;
		endif;
		uid=uid+1;
	endwhile;
	if(uid<16)	then
		[rt_val]=uid;
	else
		[rt_val]=-1;
	endif;
endif;

if(syscallnum==25)	then
	alias uid R4;
	uid=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];
	if((uid<0)||(uid>15))	then
		[rt_val]=-1;
	else
		if([USER_TABLE+(uid*2)+0]==-1)	then
			[rt_val]=-1;
		else
			[rt_val]=[USER_TABLE+(uid*2)+0];
		endif;
	endif;
endif;

[base_pt+9]=0;
SP=[base_pt+13];
ireturn;
