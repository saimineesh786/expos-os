alias syscallnum R1;
alias userSP R0;

userSP=SP;
syscallnum=[([PTBR+(2*((userSP-5)/512))]*512)+(userSP-5)%512];

alias base_pt R2;
base_pt=PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16);

alias rt_val R3;
rt_val=([PTBR+(2*((userSP-1)/512))]*512)+(userSP-1)%512;

[base_pt+9]=syscallnum;
[base_pt+13] = SP;
SP=([base_pt+11]*512)-1;

if(syscallnum==2)	then
	alias fname R4;
	alias base R5;
	alias index R6;
	fname=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];
	base=([base_pt+11]+1)*512;
	index=16;
	while(index>0)	do
		if([base-index]==-1)	then
			break;
		endif;
		index=index-2;
	endwhile;
	if(index>0)	then
		alias oft_index R7;
		multipush(R0,R1,R2,R3,R4,R5,R6);
		R1=3;
		R2=fname;
		call MOD_3;
		oft_index=R0;
		multipop(R0,R1,R2,R3,R4,R5,R6);
		if(oft_index>=0)	then
			[base-index]=0;
			[base-index+1]=oft_index;
			[rt_val]=index;
		else
			[rt_val]=oft_index;
		endif;
	else
		[rt_val]=-3;
	endif;
endif;

if(syscallnum==3)	then
	alias fd R4;
	fd=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];
	if(((fd%2)==0)&&(fd>0)&&(fd<=16))	then
		alias base R5;
		base=([base_pt+11]+1)*512;
		if([base-fd]==0)	then
			alias oft_index R6;
			oft_index=[base-fd+1];
			multipush(R0,R1,R2,R3,R4,R5,R6);
			R1=4;
			R2=oft_index;
			call MOD_3;
			multipop(R0,R1,R2,R3,R4,R5,R6);
			[base-fd]=-1;
			[base-fd+1]=-1;
			[rt_val]=0;
		else
			[rt_val]=-1;
		endif;
	else
		[rt_val]=-1;
	endif;
endif;

if(syscallnum==6)	then
	alias fd R4;
	fd=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];
	alias offset R5;
	offset=[([PTBR+(2*((userSP-3)/512))]*512)+(userSP-3)%512];
	if(((fd%2)==0)&&(fd>0)&&(fd<=16))	then
		alias base R6;
		base=([base_pt+11]+1)*512;
		if([base-fd]==0)	then
			alias oft_index R7;
			oft_index=[base-fd+1];
			alias inode_index R8;
			inode_index=[OPEN_FILE_TABLE+(oft_index*4)+0];
			multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8);
			R1=4;
			R2=inode_index;
			R3=[SYSTEM_STATUS_TABLE+1];
			call MOD_0;
			R9=R0;
			multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8);
			if(R9!=-1)	then
				alias lseek_cur R10;
				lseek_cur=[OPEN_FILE_TABLE+(oft_index*4)+2];
				alias fsize R11;
				if([OPEN_FILE_TABLE+(oft_index*4)+0]==INODE_ROOT)	then
					fsize=480;
				else
					fsize=[INODE_TABLE+(inode_index*16)+2];
				endif;
				if((lseek_cur+offset)<0)	then
					[rt_val]=-2;
				else
					if(offset==0)	then
						lseek_cur=0;
					else
						if((offset+lseek_cur)>fsize)	then
							lseek_cur=fsize;
						else
							lseek_cur=lseek_cur+offset;
						endif;
					endif;
					
					[OPEN_FILE_TABLE+(oft_index*4)+2]=lseek_cur;
					[rt_val]=0;
				endif;
				multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8);
				R1=5;
				R2=inode_index;
				R3=[SYSTEM_STATUS_TABLE+1];
				call MOD_0;
				multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8);
			else
				[rt_val]=-1;
			endif;
		else
			[rt_val]=-1;
		endif;
	else
		[rt_val]=-1;
	endif;
endif;

[base_pt+9]=0;
SP=[base_pt+13];
ireturn;
