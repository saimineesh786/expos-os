alias userSP R0;
userSP=SP;

alias base_pt R1;
base_pt=PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16);

alias rt_val R2;
rt_val=([PTBR+(2*((userSP-1)/512))]*512)+(userSP-1)%512;

[base_pt+9]=27;
[base_pt+13]=SP;
SP=([base_pt+11]*512)-1;

alias uname R3;
uname=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];

alias pword R4;
pword=[([PTBR+(2*((userSP-3)/512))]*512)+(userSP-3)%512];

if([base_pt+1]!=1)	then
	[rt_val]=-2;
else
	alias uid R5;
	uid=0;
	while(uid<16)	do
		if([USER_TABLE+(uid*2)+0]==uname)	then
			break;
		endif;
		uid=uid+1;
	endwhile;
	if(uid<16)	then
		encrypt pword;
		if(pword==[USER_TABLE+(uid*2)+1])	then
			[PROCESS_TABLE+(2*16)+4]=CREATED;
			[PROCESS_TABLE+(2*16)+3]=uid;
			[PROCESS_TABLE+(2*16)+2]=1;
			[base_pt+4]=WAIT_PROCESS;
			[base_pt+5]=2;
			[SYSTEM_STATUS_TABLE+0]=uid;
			multipush(R0,R1,R2,R3,R4,R5);
			call MOD_5;
			multipop(R0,R1,R2,R3,R4,R5);
			[rt_val]=0;
		else
			[rt_val]=-1;
		endif;
	else
		[rt_val]=-1;
	endif;
endif;
breakpoint;
[base_pt+9]=0;
SP=[base_pt+13];
ireturn;
