alias syscallnum R1;
alias userSP R0;
userSP=SP;
alias base_pt R9;
base_pt=PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16);
alias rt_val R10;
rt_val=([PTBR+(2*((userSP-1)/512))]*512)+(userSP-1)%512;
syscallnum=[([PTBR+(2*((userSP-5)/512))]*512)+(userSP-5)%512];
[base_pt+9]=syscallnum;
[base_pt+13] = SP;
SP=([base_pt+11]*512)-1;

alias fname R2;
fname=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];
if(syscallnum==1)	then
	alias permission  R3;
	permission=[([PTBR+(2*((userSP-3)/512))]*512)+(userSP-3)%512];
	alias base R4;
	alias index R5;
	index=0;
	alias first_free_page R6;
	first_free_page=-1;
	alias uid R7;
	uid=[base_pt+3];
	while(index<60)	do
		if([INODE_TABLE+(index*16)+1]==fname)	then
			[rt_val]=0;
			break;
		endif;
		if(([INODE_TABLE+(index*16)+1]==-1)&&(first_free_page==-1))	then
			first_free_page=index;
		endif;
		index=index+1;
	endwhile;
	if(index==60)	then
		if(first_free_page!=-1)	then
			base=INODE_TABLE+(first_free_page*16);
			[base+0]=DATA;
			[base+1]=fname;
			[base+2]=0;
			[base+3]=uid;
			[base+4]=permission;
			[base+8]=-1;
			[base+9]=-1;
			[base+10]=-1;
			[base+11]=-1;
			base=ROOT_FILE+(first_free_page*8);
			[base+0]=fname;
			[base+1]=0;
			[base+2]=DATA;
			[base+3]=[USER_TABLE+(uid*2)+0];
			[base+4]=permission;
			[rt_val]=0;
		else
			[rt_val]=-1;
		endif;
	endif;
endif;

if(syscallnum==4)	then
	alias index R3;
	index=0;
	while(index<60)	do
		if([INODE_TABLE+(index*16)+1]==fname)	then
			break;
		endif;
		index=index+1;
	endwhile;
	if(index<60)	then
		alias base R4;
		base=INODE_TABLE+(index*16);
		if([base+0]==DATA)	then
			if([base+4]==0)	then
				if(([base_pt+3]!=1)&&([base+3]!=[base_pt+3]))	then
					print "del";
					[rt_val]=-1;
					[base_pt+9]=0;
					SP=[base_pt+13];
					ireturn;
				endif;
			endif;
			multipush(R0,R1,R2,R3,R4,R5,R9,R10);
			R1=4;
			R2=index;
			R3=[SYSTEM_STATUS_TABLE+1];
			call MOD_0;
			R6=R0;
			multipop(R0,R1,R2,R3,R4,R5,R9,R10);
			if(R6!=-1)	then
				if([FILE_STATUS_TABLE+(index*4)+1]==-1)	then
					alias index2 R7;
					index2=8;
					while(index2<12)	do
						if([base+index2]!=-1)	then
							alias buffer_index R8;
							buffer_index=BUFFER_TABLE+(([base+index2]%4)*4);
							if(([buffer_index+0]==[base+index2])&&([buffer_index+1]==1))	then
								[buffer_index+1]=0;
							endif;
							multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
							R1=4;
							R2=[base+index2];
							R3=[SYSTEM_STATUS_TABLE+1];
							call MOD_2;
							multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
						endif;
						[base+index2]=-1;
						index2=index2+1;
					endwhile;
					[base+0]=-1;
					[base+1]=-1;
					[base+2]=-1;
					[base+3]=-1;
					[base+4]=-1;
					base=ROOT_FILE+(index*8);
					[base+0]=-1;
					[base+1]=-1;
					[base+2]=-1;
					[base+3]=-1;
					[base+4]=-1;
					[rt_val]=0;
				else
					[rt_val]=-2;
				endif;
				multipush(R0,R1,R2,R3,R4,R5,R6,R9,R10);
				R1=5;
				R2=index;
				R3=[SYSTEM_STATUS_TABLE+1];
				call MOD_0;
				multipop(R0,R1,R2,R3,R4,R5,R6,R9,R10);
			else
				[rt_val]=0;
			endif;
		else
			[rt_val]=-1;
		endif;
	else
		[rt_val]=0;	
	endif;	
endif;
[base_pt+9]=0;
SP=[base_pt+13];
ireturn;
