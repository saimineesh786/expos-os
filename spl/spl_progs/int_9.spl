[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9] = 9;
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13] = SP;

alias userSP R0;
userSP = SP;

SP = [PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11] * 512 - 1;
  
alias file_name R1;
file_name = [[PTBR + (2 * ((userSP - 4)/512))] * 512 + (userSP - 4) % 512];
alias index R2;
index = 0;

while(index < 60)	do
	if([INODE_TABLE + (index * 16) + 1] == file_name)	then
		if([INODE_TABLE + (index * 16)] == EXEC)	then
			break;
		endif;
	endif;
	index = index + 1;
endwhile;

if(index < 60)	then
	multipush(R0,R1,R2);
	R1 = 3;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	call MOD_1;
	multipop(R0,R1,R2);
	
	alias user_area_page_num R3;
	user_area_page_num = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11];
	[MEMORY_FREE_LIST + user_area_page_num] = [MEMORY_FREE_LIST + user_area_page_num] + 1;
	[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
	
	SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11] * 512 - 1;
	
	alias i R4;
	alias base R5;
	
	base = (user_area_page_num + 1) * 512;
	i = 16;
	while(i > 0)	do
		[base - i] = -1;
		i = i - 1;
	endwhile;
	
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 4] = RUNNING;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 7] = index;
	
	multipush(R0,R1,R2,R3);
	R1=1;
	call MOD_2;
	[PTBR+16] = R0;
	[PTBR+17] = "0110";
	multipop(R0,R1,R2,R3);
	
	multipush(R0,R1,R2,R3);
	R1=1;
	call MOD_2;
	[PTBR+18] = R0;
	[PTBR+19] = "0110";
	multipop(R0,R1,R2,R3);
	
	if([INODE_TABLE + (index * 16) + 8] != -1)	then
		multipush(R0,R1,R2,R3);
		R1 = 5;
		R2 = [INODE_TABLE + (index * 16) + 8];
		R3 = [SYSTEM_STATUS_TABLE + 1];
		call MOD_2;
		[PTBR + 8] = R0;
		[PTBR + 9] = "0100";
		multipop(R0,R1,R2,R3);
	else
		[PTBR + 8] = -1;
		[PTBR + 9] = "0000";
	endif;
	
	
	[PTBR+0] = 63;
	[PTBR+1] = "0100";
	[PTBR+2] = 64;
	[PTBR+3] = "0100";
	
	[PTBR+4] = -1;
	[PTBR+5] = "0000";
	[PTBR+6] = -1;
	[PTBR+7] = "0000";
	
	[PTBR+10] = -1;
	[PTBR + 11] = "0000";
	[PTBR+12] = -1;	
	[PTBR + 13] = "0000";
	[PTBR+14] = -1;	
	[PTBR + 15] = "0000";	
	
	
	alias i1 R4;
	i1 = 1;
	while(i1 < 10)	do
		if((i1 >= 4)&&(i1 <= 7))	then
			[DISK_MAP_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 10) + i1] = [INODE_TABLE + (index * 16) + i1 + 4];
		else
			[DISK_MAP_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 10) + i1] = -1;
		endif;
		i1 = i1 + 1;
	endwhile;
	
	[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13] = [PTBR + 16]*512;
	[[PTBR + 16] * 512] = [([PTBR + 8] * 512) + 1];
	SP = 8*512;
else
	[[PTBR + (2 * ((userSP - 1)/512))] * 512 + (userSP - 1)%512] = -1;
	SP = [PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13];
endif;
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9] = 0;
ireturn; 
