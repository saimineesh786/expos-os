//int=timer
loadi(4,17);
loadi(5,18);

//int=disk
loadi(6,19);
loadi(7,20);

//int=console
loadi(8,21);
loadi(9,22);

//lib-code
loadi(63,13);
loadi(64,14);

//init-code
loadi(65,7);
loadi(66,8);

//exception
loadi(2,15);
loadi(3,16);

//int=4
loadi(10,23);
loadi(11,24);

//int=6
loadi(14,27);
loadi(15,28);

//int=7 
loadi(16,29);
loadi(17,30);

//int=8
loadi(18,31);
loadi(19,32);

//int=9
loadi(20,33);
loadi(21,34);

//int=10
loadi(22,35);
loadi(23,36);

//int=11
loadi(24,37);
loadi(25,38);

//int=13
loadi(28,41);
loadi(29,42);

//int=14
loadi(30,43);
loadi(31,44);

//int=15
loadi(32,45);
loadi(33,46);

//mod=0
loadi(40,53);
loadi(41,54);

//mod=1
loadi(42,55);
loadi(43,56);

//mod=2
loadi(44,57);
loadi(45,58);

//mod=4
loadi(48,61);
loadi(49,62);

//mod=5
loadi(50,63);
loadi(51,64);
breakpoint;
//inode-table
loadi(59,3);
loadi(60,4);
//root-file
loadi(62,5);

//disk-free-list
loadi(61,2);

alias i R1;
i = 0;
while(i < 128)   do
	if(i < 76)	then
		[MEMORY_FREE_LIST + i] = 1;
	else
		[MEMORY_FREE_LIST + i] = 0;
	endif;
	i = i + 1;
endwhile;

i=0;
while(i<32)	do
	[SEMAPHORE_TABLE+(i*4)+0]=-1;
	[SEMAPHORE_TABLE+(i*4)+1]=0;
	i=i+1;
endwhile;
PTBR = PAGE_TABLE_BASE+20;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 78;
[MEMORY_FREE_LIST + 78] = 1;
[PTBR+17] = "0110";
[PTBR+18] = 79;
[MEMORY_FREE_LIST + 79] = 1;
[PTBR+19] = "0110";

[MEMORY_FREE_LIST + 81] = 1;
[MEMORY_FREE_LIST + 82] = 1;
[MEMORY_FREE_LIST + 80] = 1;

[PROCESS_TABLE+16+1]=1;
[PROCESS_TABLE+16+3]=1;
[PROCESS_TABLE+16+4]=CREATED;
[PROCESS_TABLE+16+9]=0;
[PROCESS_TABLE+16+11]=80;
[PROCESS_TABLE+16+13]=8*512;
[PROCESS_TABLE+16+12]=0;
[PROCESS_TABLE+16+14]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+16+15]=10;
[78*512]=[65*512+1];

[SYSTEM_STATUS_TABLE + 3] = 0;
[SYSTEM_STATUS_TABLE + 2] = 45;
[DISK_STATUS_TABLE+0] = 0;
[TERMINAL_STATUS_TABLE+0]=0;


alias i1 R0;
alias base R1;
alias j R2;
j = 0;
while(j <= 1)	do
	base = ([PROCESS_TABLE+(j * 16)+11] + 1) * 512;
	i1 = 16;
	while(i1 > 0)	do	
		[base - i1] = -1;
		i1 = i1 - 1;
	endwhile;
	j = j + 1;
endwhile;

base=FILE_STATUS_TABLE;
i1=0;
while(i1<60)	do
	[base+(i1*4)+0]=-1;
	[base+(i1*4)+1]=-1;
	i1=i1+1;
endwhile;
base=BUFFER_TABLE;
i1=0;
while(i1<4)	do
	[base+(i1*4)+0]=-1;
	[base+(i1*4)+1]=0;
	[base+(i1*4)+2]=-1;
	i1=i1+1;
endwhile;
breakpoint;
alias counter R0;
counter=2;
while(counter<=15)  do
    [PROCESS_TABLE+(counter*16)+4]=TERMINATED;
    counter=counter+1;
endwhile;

counter = 0;
while(counter < 10)	do
	[DISK_MAP_TABLE + counter] = -1;
	[DISK_MAP_TABLE + 10 + counter] = -1;
	counter = counter + 1;
endwhile;
[DISK_MAP_TABLE + 4] = 11;
[DISK_MAP_TABLE + 5] = 12;
[DISK_MAP_TABLE + 10 + 4] = 7;
[DISK_MAP_TABLE + 10 + 5] = 8;
breakpoint;
return;
