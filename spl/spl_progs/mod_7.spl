//int=timer
loadi(4,17);
loadi(5,18);

//int=disk
loadi(6,19);
loadi(7,20);

//int=console
loadi(8,21);
loadi(9,22);

//lib-code
loadi(63,13);
loadi(64,14);

//init-code
loadi(65,7);

//shell-code
loadi(67,9);
loadi(68,10);

//exception
loadi(2,15);
loadi(3,16);

//int=4
loadi(10,23);
loadi(11,24);

//int=5
loadi(12,25);
loadi(13,26);

//int=6
loadi(14,27);
loadi(15,28);

//int=7 
loadi(16,29);
loadi(17,30);

//int=8
loadi(18,31);
loadi(19,32);

//int=9
loadi(20,33);
loadi(21,34);

//int=10
loadi(22,35);
loadi(23,36);

//int=11
loadi(24,37);
loadi(25,38);

//int=12
loadi(26,39);
loadi(27,40);

//int=13
loadi(28,41);
loadi(29,42);

//int=14
loadi(30,43);
loadi(31,44);

//int=15
loadi(32,45);
loadi(33,46);

//int=16
loadi(34,47);
loadi(35,48);

//int=17
loadi(36,49);
loadi(37,50);

//mod=0
loadi(40,53);
loadi(41,54);

//mod=1
loadi(42,55);
loadi(43,56);

//mod=2
loadi(44,57);
loadi(45,58);

//mod=3
loadi(46,59);
loadi(47,60);

//mod=4
loadi(48,61);
loadi(49,62);

//mod=5
loadi(50,63);
loadi(51,64);

//inode-table
loadi(59,3);
loadi(60,4);

//root-file
loadi(62,5);

//disk-free-list
loadi(61,2);

alias i R1;

i=0;
while(i<32)	do
	R3=SEMAPHORE_TABLE+(i*4);
	[R3+0]=-1;
	[R3+1]=0;
	i=i+1;
endwhile;
PTBR = PAGE_TABLE_BASE+20;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 66;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0110";

alias base R1;
base=PROCESS_TABLE+16;
[base+1]=1;
[base+3]=0;
[base+4]=CREATED;
[base+9]=0;
[base+11]=77;
[base+13]=8*512;
[base+12]=0;
[base+14]=PAGE_TABLE_BASE+20;
[base+15]=10;
[66*512]=[65*512+1];

PTBR = PAGE_TABLE_BASE+40;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

[PTBR+8] = 67;
[PTBR+9] = "0100";
[PTBR+10] = 68;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 78;
[PTBR+17] = "0110";
[PTBR+18] = 79;
[PTBR+19] = "0110";

base=PROCESS_TABLE+32;
[base+1]=2;
[base+2]=1;
[base+4]=TERMINATED;
[base+9]=0;
[base+11]=80;
[base+13]=8*512;
[base+12]=0;
[base+14]=PAGE_TABLE_BASE+40;
[base+15]=10;
[78*512]=[67*512+1];

[SYSTEM_STATUS_TABLE + 3] = 0;
[SYSTEM_STATUS_TABLE + 2] = 47;

[MEMORY_FREE_LIST+77]=1;
[MEMORY_FREE_LIST+78]=1;
[MEMORY_FREE_LIST+79]=1;
[MEMORY_FREE_LIST+80]=1;

alias i1 R0;
alias j R2;
j = 0;
while(j <= 2)	do
	base = ([PROCESS_TABLE+(j * 16)+11] + 1) * 512;
	i1 = 16;
	while(i1 > 0)	do	
		[base - i1] = -1;
		i1 = i1 - 1;
	endwhile;
	j = j + 1;
endwhile;

base=FILE_STATUS_TABLE;
i1=0;
while(i1<60)	do
	R3=base+(i1*4);
	[R3+0]=-1;
	[R3+1]=-1;
	i1=i1+1;
endwhile;
base=BUFFER_TABLE;
i1=0;
while(i1<4)	do
	R3=base+(i1*4);
	[R3+0]=-1;
	[R3+1]=0;
	[R3+2]=-1;
	i1=i1+1;
endwhile;

base=OPEN_FILE_TABLE;
i1=0;
while(i1<32)	do
	R3=base+(i1*4);
	[R3+0]=-1;
	[R3+1]=0;
	i1=i1+1;
endwhile;

alias counter R0;
counter = 0;
while(counter < 10)	do
	[DISK_MAP_TABLE + counter] = -1;
	[DISK_MAP_TABLE + 10 + counter] = -1;
	[DISK_MAP_TABLE + 20 + counter] = -1;
	counter = counter + 1;
endwhile;
[DISK_MAP_TABLE + 4] = 11;
[DISK_MAP_TABLE + 14] = 7;
[DISK_MAP_TABLE + 24] = 9;
[DISK_MAP_TABLE + 25] = 10;
return;
