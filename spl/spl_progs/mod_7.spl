//lib-code
loadi(63,13);
loadi(64,14);

//int=7 
loadi(16,29);
loadi(17,30);

//int=timer
loadi(4,17);
loadi(5,18);

//init-code
loadi(65,7);
loadi(66,8);

//int=10
loadi(22,35);
loadi(23,36);

//exception
loadi(2,15);
loadi(3,16);

//prog-2
loadi(83,69);

//prog-3
loadi(90,70);

//mod=5
loadi(50,63);
loadi(51,64);

//mod=0
loadi(40,53);
loadi(41,54);

//mod=4
loadi(48,61);
loadi(49,62);

//int=console
loadi(8,21);
loadi(9,22);

//int=6
loadi(14,27);
loadi(15,28);

//int=9
loadi(20,33);
loadi(21,34);

//mod=1
loadi(42,55);
loadi(43,56);

//mod=2
loadi(44,57);
loadi(45,58);

//inode-table
loadi(59,3);
loadi(60,4);
alias i1 R1;
i1 = 0;
while(i1 < 128)   do
	if(i1 < 76)	then
		[MEMORY_FREE_LIST + i1] = 1;
	else
		[MEMORY_FREE_LIST + i1] = 0;
	endif;
	i1 = i1 + 1;
endwhile;

[TERMINAL_STATUS_TABLE]=0;

PTBR = PAGE_TABLE_BASE+20;

[PTBR+0] = 63;
[MEMORY_FREE_LIST + 63] = 2;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[MEMORY_FREE_LIST + 64] = 2;
[PTBR+3] = "0100";

[PTBR+4] = 76;
[MEMORY_FREE_LIST + 76] = 1;
[PTBR+5] = "0110";
[PTBR+6] = 77;
[MEMORY_FREE_LIST + 77] = 1;
[PTBR+7] = "0110";

[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 78;
[MEMORY_FREE_LIST + 78] = 1;
[PTBR+17] = "0110";
[PTBR+18] = 79;
[MEMORY_FREE_LIST + 79] = 1;
[PTBR+19] = "0110";

[MEMORY_FREE_LIST + 81] = 1;
[MEMORY_FREE_LIST + 82] = 1;
[MEMORY_FREE_LIST + 80] = 1;

[PROCESS_TABLE+16+1]=1;
[PROCESS_TABLE+16+4]=CREATED;
[PROCESS_TABLE+16+9]=0;
[PROCESS_TABLE+16+11]=80;
[PROCESS_TABLE+16+13]=8*512;
[PROCESS_TABLE+16+12]=0;
[PROCESS_TABLE+16+14]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+16+15]=10;
[78*512]=[65*512+1];

[SYSTEM_STATUS_TABLE + 3] = 0;
[SYSTEM_STATUS_TABLE + 2] = 45;

alias counter R0;
counter=2;
while(counter<=15)  do
    [PROCESS_TABLE+(counter*16)+4]=TERMINATED;
    counter=counter+1;
endwhile;
return;
