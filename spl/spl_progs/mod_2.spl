alias funct_num R1;

if(funct_num == 1)	then
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;
	breakpoint;
	while([SYSTEM_STATUS_TABLE + 2] == 0)	do
		[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 4] = WAIT_MEM;
		multipush(R0,R1);
		call MOD_5;
		multipop(R0,R1);
	endwhile;
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
	[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
	alias i1 R2;
	i1 = 76;
	while((i1 < 128) && ([MEMORY_FREE_LIST + i1] != 0))	do
		i1 = i1 + 1;
	endwhile;
	[MEMORY_FREE_LIST + i1] = 1;
	R0 = i1;
endif;

if(funct_num == 2)	then
	alias page_num R2;
	[MEMORY_FREE_LIST + page_num] = [MEMORY_FREE_LIST + page_num] - 1;
	breakpoint;
	if([MEMORY_FREE_LIST + page_num] == 0)	then
		[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
		alias i1 R3;
		i1 = 0;
		while(i1 < 16)	do
			if([PROCESS_TABLE + (i1 * 16) + 4] == WAIT_MEM)	then
				[PROCESS_TABLE + (i1 * 16) + 4] = READY;
			endif;
			i1 = i1 + 1;
		endwhile;
	endif;
endif;

if(funct_num == 4)	then
	alias disk_block_num R2;
	alias current_pid R3;
	[DISK_FREE_LIST + disk_block_num] = [DISK_FREE_LIST + disk_block_num] - 1;
endif;

if(funct_num == 5)	then
	alias disk_block_num R2;
	alias current_pid R3;
	alias i2 R4;
	i2 = 0;
	while((i2 < 160) && ([DISK_MAP_TABLE + i2] != disk_block_num))	do
		i2 = i2 + 1;
	endwhile; 
	if(i2 < 160)	then
		alias pno R5;
		alias met_data R6;
		pno = i2 / 10;
		met_data = [PROCESS_TABLE + (pno * 16) + (2 * (i2 % 16)) + 1];
		if(met_data == "0100"||met_data == "0101"||met_data == "0110"||met_data == "0111"||met_data == "1100"||met_data == "1101"||met_data == "1110"||met_data == "1111")	then
			[MEMORY_FREE_LIST + i2] = [MEMORY_FREE_LIST + i2] + 1;
			R0 = i2;
			return;
		endif; 
	endif;
	
	multipush(R1,R2,R3);
	R1 = 1;
	call MOD_2;
	multipop(R1,R2,R3);
	
	multipush(R0);
	multipush(R1,R2,R3);
	R4 = disk_block_num;
	R1 = 2;
	R2 = current_pid;
	R3 = R0;
	call MOD_4;
	multipop(R1,R2,R3);
	multipop(R0);
endif;

breakpoint;
return;
