[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9] = 7;
[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13] = SP;

alias userSP R0;
userSP = SP;

SP = [PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+11] * 512 - 1;

alias phy_page_num R1;
alias offset R2;
alias fd_phy_addr R3;

phy_page_num = [PTBR + 2 * ( (userSP-4) / 512 ) ];
offset = (userSP-4)%512;
fd_phy_addr = phy_page_num * 512 + offset;

alias fd R4;
fd = [fd_phy_addr];

alias phy_addr_ret_val R5;

if( fd != -1)	then
	phy_addr_ret_val = [PTBR+ 2 * ( (userSP-1) / 512 ) ] * 512 + (userSP - 1)%512;
	[phy_addr_ret_val] = -1;
else
	alias word R5;
	word = [[PTBR + 2*((userSP - 3) / 512)]*512 + (userSP-3) % 512];
	
	multipush(R0,R1,R2,R3,R4,R5);
	R1 = 4;
	R2 = [SYSTEM_STATUS_TABLE + 1];
	R3 = word;
	call MOD_4;
	multipop(R0,R1,R2,R3,R4,R5);

	alias phy_addr_ret_val R5;
	phy_addr_ret_val = [PTBR+ 2 * ( (userSP-1) / 512 ) ] * 512 + (userSP - 1)%512;
	[phy_addr_ret_val] = 0;
endif;

[PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+9] = 0;
SP = [PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16)+13];
ireturn;
