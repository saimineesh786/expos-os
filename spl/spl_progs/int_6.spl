alias userSP R0;
userSP=SP;

alias base_pt R1;
base_pt=PROCESS_TABLE+([SYSTEM_STATUS_TABLE+1]*16);

alias rt_val R2;
rt_val=([PTBR+(2*((userSP-1)/512))]*512)+(userSP-1)%512;

[base_pt+9]=7;
[base_pt+13]=SP;
SP=([base_pt+11]*512)-1;

alias fd R3;
fd=[([PTBR+(2*((userSP-4)/512))]*512)+(userSP-4)%512];

alias buff R4;
buff=[([PTBR+(2*((userSP-3)/512))]*512)+(userSP-3)%512];


if(fd==-1)	then
	multipush(R0,R1,R2,R3,R4);
	R1=4;
	R2=[SYSTEM_STATUS_TABLE + 1];
	R3=buff;
	call MOD_4;
	multipop(R0,R1,R2,R3,R4);
	[rt_val]=0;
else
	if(((fd%2)==0)&&(fd>0)&&(fd<=16))	then
		alias base R5;
		base=([base_pt+11]+1)*512;
		if([base-fd]==0)	then
			alias oft_index R6;
			oft_index=[base-fd+1];
			alias inode_index R7;
			inode_index=[OPEN_FILE_TABLE+(oft_index*4)+0];
			multipush(R0,R1,R2,R3,R4,R5,R6,R7);
			R1=4;
			R2=inode_index;
			R3=[SYSTEM_STATUS_TABLE+1];
			call MOD_0;
			R8=R0;
			multipop(R0,R1,R2,R3,R4,R5,R6,R7);
			if(R8!=-1)	then
				alias lseek_pos R9;
				lseek_pos=[OPEN_FILE_TABLE+(oft_index*4)+2];
				alias phy_addr_buff R10;
				phy_addr_buff=([PTBR+(2*((buff)/512))]*512)+(buff)%512;
				if(inode_index==INODE_ROOT)	then
					if(lseek_pos==480)	then
						multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
						R1=5;
						R2=inode_index;
						R3=[SYSTEM_STATUS_TABLE+1];
						call MOD_0;
						multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
						[rt_val]=-2;
						[base_pt+9]=0;
						SP=[base_pt+13];
						ireturn;
					else
						[phy_addr_buff]=[ROOT_FILE+lseek_pos];
					endif;
				else
					if(lseek_pos==[INODE_TABLE+(inode_index*16)+2])	then
						multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
						R1=5;
						R2=inode_index;
						R3=[SYSTEM_STATUS_TABLE+1];
						call MOD_0;
						multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
						[rt_val]=-2;
						[base_pt+9]=0;
						SP=[base_pt+13];
						ireturn;
					else
						alias block_index R11;
						block_index=(lseek_pos/512);
						alias block_no R12;
						block_no=[INODE_TABLE+(inode_index*16)+8+block_index];
						alias offset R13;
						offset=(lseek_pos%512);
						multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13);
						R1=2;
						R2=block_no;
						R3=offset;
						R4=phy_addr_buff;
						call MOD_3;
						multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13);
					endif;
				endif;
				[OPEN_FILE_TABLE+(oft_index*4)+2]=[OPEN_FILE_TABLE+(oft_index*4)+2]+1;
				multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
				R1=5;
				R2=inode_index;
				R3=[SYSTEM_STATUS_TABLE+1];
				call MOD_0;
				multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10);
				[rt_val]=0;
			else
				[rt_val]=-1;
			endif;
		else
			[rt_val]=-1;
		endif;
	else
		[rt_val]=-1;
	endif;
endif;

[base_pt+9]=0;
SP=[base_pt+13];
ireturn;
