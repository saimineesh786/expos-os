check ---- haltprog.spl
mod 0 ---- resource manager
	-- 3 . Acquire Disk
	-- 8 . Acquire Terminal
	-- 9 . Release Terminal
mod 1 ---- process manager
	-- 1 . Get PCB Entry
	-- 2 . Free User Page
	-- 3 . Exit Process
	-- 4 . Free Page Table
mod 2 ---- memory manager
	-- 1 . Get Free Page
	-- 2 . Release Page
	-- 4 . Release Block
	-- 5 . Get Code Page
mod 4 ---- device manager
	-- 2 . Disk Load
	-- 3 . Terminal Write
	-- 4 . Terminal Read
mod 5 ---- scheduler
	-- scheduler if a process goes to Wait state or Timer Interrupt
mod 7 ---- boot module
	-- loads and links Init code, initalize Data structures Process Table, Page Table, Disk Status Table, Disk Map 		Table,Per Process Table,Memory Free List, Terminal Status Table and System Status Table.
int 6   
	-- read syscall	
int 7	
	-- write syscall
int 8
	-- fork syscall
int 9 
	-- exec syscall
int 10
	-- exit syscall
Note -- Never Mess Idle It shall be Only Infinite Loop No reads , No prints && No heap.
	 XSM machine disables interrupts when executing in the kernel mode. Hence, the disk controller can raise an interrupt only when the machine is executing in the user mode. Hence the OS has to schedule "some process" even if all processess are waiting for disk/terminal interrupt - for otherwise, the device concerned will never be able to interrupt the processor. The IDLE process is precisely designed to take care of this and other similar situations. 
